(function(){const o=document.createElement("link").relList;if(o&&o.supports&&o.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))l(t);new MutationObserver(t=>{for(const r of t)if(r.type==="childList")for(const c of r.addedNodes)c.tagName==="LINK"&&c.rel==="modulepreload"&&l(c)}).observe(document,{childList:!0,subtree:!0});function n(t){const r={};return t.integrity&&(r.integrity=t.integrity),t.referrerPolicy&&(r.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?r.credentials="include":t.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function l(t){if(t.ep)return;t.ep=!0;const r=n(t);fetch(t.href,r)}})();const h=void 0,u=void 0,p="user-read-currently-playing",f=document.getElementById("login-button"),a=document.getElementById("album-art");document.getElementById("album-art-container");let s=null;f.addEventListener("click",()=>{const e=`https://accounts.spotify.com/authorize?client_id=${h}&response_type=code&redirect_uri=${encodeURIComponent(u)}&scope=${encodeURIComponent(p)}&show_dialog=true`;window.location.href=e});async function y(){const o=new URLSearchParams(window.location.search).get("code");if(o)try{const n=await m(o);s=n.access_token,g(n.refresh_token),f.style.display="none",await i(),setInterval(i,5e3)}catch(n){console.error("Error exchanging code for token:",n)}}async function m(e){const o=await fetch("/.netlify/functions/exchange-token",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({code:e})});if(!o.ok)throw new Error("Failed to exchange authorization code for tokens");return o.json()}async function i(){if(!s)try{await d()}catch(e){console.error("Error refreshing access token:",e),window.location.href=u;return}try{const e=await fetch("https://api.spotify.com/v1/me/player/currently-playing",{headers:{Authorization:`Bearer ${s}`}});if(e.ok){const o=await e.json();if(o&&o.item){const n=o.item.album.images[0].url;a.src=n,a.style.display="block"}else a.style.display="none",console.log("Nothing currently playing or data not available.")}else e.status===401?(console.error("Access token expired, attempting refresh"),await d(),await i()):console.error("Error fetching current song:",e.status)}catch(e){console.error("Error:",e)}}async function d(){try{const e=await fetch("/.netlify/functions/refresh-token",{method:"POST"});if(e.ok)s=(await e.json()).access_token;else throw new Error("Failed to refresh access token")}catch(e){throw new Error("Error refreshing access token:",e)}}function g(e){document.cookie=`refresh_token=${e}; path=/; max-age=2592000; secure; samesite=strict`}window.location.search.includes("code=")&&y();
